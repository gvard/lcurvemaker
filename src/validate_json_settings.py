from argparse import ArgumentParser

import simplejson as json
from jsonschema import validate, ValidationError


parser = ArgumentParser(
    description="Python script for validating JSON settings files"
)
parser.add_argument("alias", type=str, default="",
                    help="Object alias")
args = parser.parse_args()
alias = args.alias


schema = {
    "type": "object",
    "properties": {
        alias: {
            "type": "object",
            "properties": {
                "name": {"type": "string"},
                "other": {"type": "string"},
                "coord": {"type": "string",
                          "minLength": 23,
                          "maxLength": 27,
                },
                "coordeg": {"type": "array",
                            "minItems": 2,
                            "maxItems": 2,
                            "items": {
                                "type": "number",
                                "minimum": -90,
                                "maximum": 360,
                            }},
                "gdr3": {"type": "integer",
                         "minimum": 0,
                },
                "tic": {"type": "integer",
                        "minimum": 0,
                },
                "epphot": {"type": "boolean"},
                "veb": {"type": "boolean"},
                "vst": {"type": "boolean"},
                "type": {"type": "string",
                         "minLength": 1,
                         "maxLength": 15,
                },
                "max": {"type": "number",
                        "minimum": -5,
                        "maximum": 29,
                },
                "min": {"type": "number",
                        "minimum": -1,
                        "maximum": 29,
                },
                "system": {"type": "string",
                           "minLength": 1,
                           "maxLength": 15,
                },
                "period": {"type": "number",
                           "minimum": 0,
                           "maximum": 99999,
                },
                "epoch": {"type": "number",
                          "minimum": 2400000.5,
                          "maximum": 2463000,
                },
                "etype": {"type": "string",
                          "minLength": 0,
                          "maxLength": 3,
                },
                "sp": {"type": "string",
                       "minLength": 0,
                       "maxLength": 15,
                },
                "spref": {"type": "string",
                          "minLength": 0,
                          "maxLength": 39,
                },
                "comm": {"type": "string",
                         "minLength": 0,
                         "maxLength": 4000,
                },
                "amp": {"type": "number",
                        "minimum": 0.0005,
                        "maximum": 20,
                },
                "min2": {"type": "number",
                         "minimum": -1,
                         "maximum": 29,
                },
                "min2amp": {"type": "number",
                            "minimum": 0.0005,
                            "maximum": 0.75,
                },
                "d": {"type": "number",
                      "minimum": 0.00001,
                      "maximum": 0.5,
                },
                "mint": {"type": "number",
                         "minimum": 0.00001,
                         "maximum": 0.5,
                },
                "min2ph": {"type": "number",
                           "minimum": 0.005,
                           "maximum": 0.995,
                },
                "d2": {"type": "number",
                       "minimum": 0.00001,
                       "maximum": 0.5,
                },
                "min2t": {"type": "number",
                          "minimum": 0.00001,
                          "maximum": 0.5,
                },
                "re": {"type": "number",
                       "minimum": 0.0005,
                       "maximum": 1.5,
                },
                "ell": {"type": "number",
                        "minimum": 0.0005,
                        "maximum": 0.5,
                },
                "hb": {"type": "number",
                       "minimum": 0.0005,
                       "maximum": 0.5,
                },
                "G": {"type": "number",
                      "minimum": -1.5,
                      "maximum": 27,
                },
                "V": {"type": "number",
                      "minimum": -5,
                      "maximum": 27,
                },
                "BP-RP": {"type": "number",
                          "minimum": -5,
                          "maximum": 5,
                },
                "E(BP-RP)": {"type": "number",
                             "minimum": 0,
                             "maximum": 15,
                },
                "r": {"type": "number",
                      "minimum": 1.3,
                      "maximum": 990000,
                },
                "rp": {"type": "number",
                      "minimum": 1.3,
                      "maximum": 990000,
                },
                "teff": {"type": ["number", "string"],
                         "minimum": 1000,
                         "maximum": 50000,
                },
                "teffref": {"type": "string",
                            "minLength": 0,
                            "maxLength": 39,
                },
                "logg": {"type": ["number", "string"],
                         "minimum": 0.5,
                         "maximum": 9,
                },
                "loggref": {"type": "string",
                            "minLength": 0,
                            "maxLength": 39,
                },
                "vsxoid": {"type": "integer",
                           "minimum": 0,
                           "maximum": 99000000,
                },
                "lc": {"type": "string",
                            "minLength": 0,
                            "maxLength": 2048,
                },
                "lclnk": {"type": "string",
                            "minLength": 0,
                            "maxLength": 2048,
                },
                "lczoom": {"type": "string",
                            "minLength": 0,
                            "maxLength": 2048,
                },
                "lcs": {"type": "array",
                        "minItems": 0,
                        "maxItems": 20,
                        "items": {
                            "type": "string",
                            "minLength": 0,
                            "maxLength": 2048,
                        }},
                "curveshift": {"type": "boolean"},
                "clrshift": {"type": "object"},
                "data": {"type": "object"},
                "errlim": {"type": "object"},
                "plot": {"type": "object",
                    "properties": {
                        "leg": {"type": "string",
                                "minLength": 0,
                                "maxLength": 15
                        },
                        "xedges": {"type": "number",
                                "minimum": -9999,
                                "maximum": 9999,
                        },
                        "xmal": {"type": "number",
                                "minimum": 0.0001,
                                "maximum": 50000,
                        },
                        "xmil": {"type": "number",
                                "minimum": 0.0001,
                                "maximum": 10000,
                        },
                        "xlim": {"type": "array",
                                "minItems": 2,
                                "maxItems": 2,
                                "items": {
                                    "type": "number",
                                    "minimum": -3,
                                    "maximum": 3,
                                }},
                        "xlima": {"type": "array",
                                "minItems": 2,
                                "maxItems": 2,
                                "items": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 63000,
                                }},
                        "ymal": {"type": "number",
                                "minimum": 0.0001,
                                "maximum": 5,
                        },
                        "ymil": {"type": "number",
                                "minimum": 0.0001,
                                "maximum": 10,
                        },
                        "ylim": {"type": "array",
                                "minItems": 2,
                                "maxItems": 2,
                                "items": {
                                    "type": "number",
                                    "minimum": -1,
                                    "maximum": 29,
                                }},
                        "ylima": {"type": "array",
                                "minItems": 2,
                                "maxItems": 2,
                                "items": {
                                    "type": "number",
                                    "minimum": -1,
                                    "maximum": 29,
                                }},
                    },
                },
            },
            "required": ["gdr3", "tic", "coordeg", "type", "max", "G", "BP-RP", "r", "vsxoid"],
        }
    }
}

with open(f"../objects/{alias}.json", "r", encoding="utf8") as settings_file:
    settings = json.load(settings_file, use_decimal=True)
    try:
        validate(instance=settings, schema=schema)
    except Exception as e:
        print(f"{alias}, {type(e).__name__}: {e}")
